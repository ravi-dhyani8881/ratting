name: Java CI with Maven and Docker

on:
  repository_dispatch:
    types: [trigger-ratting-workflow]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: origin/redhat
        
    - name: Log event payload
      run: echo '${{ toJson(github.event.client_payload) }}' > event_payload.json
     
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean install -DskipTests -X

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: List workspace structure
      run: |
        echo "üìÅ Listing workspace:"
        pwd
        ls -R

    - name: Build and push Docker image
      run: |
        echo "üìÅ In correct directory: $PWD"
        echo "üìÇ Listing files:"
        ls -lthr
        projectName=$(jq -r '.projectName' event_payload.json)
        organizationID=$(jq -r '.organizationID' event_payload.json)
        subOrganizationID=$(jq -r '.subOrganizationID' event_payload.json)
        enviromentID=$(jq -r '.enviromentID' event_payload.json)
        graphID=$(jq -r '.graphID' event_payload.json)
        version=$(jq -r '.version' event_payload.json)
        # Convert values to lowercase & sanitize (optional)
        image_name="$(echo ${organizationID}-${subOrganizationID}-${enviromentID}-${graphID}-rest  | tr '[:upper:]' '[:lower:]' | tr -d ' ' | tr '/' '-')"
         # Define full image name with version tag
        full_image_name="ravi8881/${image_name}:${version}"
        
        docker build -t $full_image_name .
        docker push $full_image_name
